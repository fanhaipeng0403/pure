<application>
  <component name="AppStorage">
    <histories>
      <item value="scope" />
      <item value="django" />
      <item value="Turns a setting value into a dependency ." />
      <item value="Subclass of tuple so Django can tell this was originally a swappable dependency when it reads the migration file ." />
      <item value="originally" />
      <item value="Subclass" />
      <item value="Subclass of tuple so Django can tell this was originally a swappable" />
      <item value="Swappable" />
      <item value="preserve" />
      <item value="mutate" />
      <item value="# Should be a list of ( app , migration name )." />
      <item value="# Other migrations that should be run before this migration ." />
      <item value="migration" />
      <item value="# Operations to apply during this migration , in order ." />
      <item value="generic" />
      <item value="Class - based views" />
      <item value="Function views" />
      <item value="urlpatterns" />
      <item value="For the full list of settings and their values , see" />
      <item value="Muux" />
      <item value="X Frame Options Middleware" />
      <item value="Message Middleware" />
      <item value="Session Authentication Middleware" />
      <item value="Authentication Middleware" />
      <item value="Csrf View Middleware" />
      <item value="Common Middleware" />
      <item value="Session Middleware" />
      <item value="Security Middleware" />
      <item value="MIDDLEWARE CLASSES = [ ' django . middleware . security . Security Middleware ', ' django . contrib . sessions . middleware . Session Middleware ', ' django . middleware . common . Common Middleware ', ' django . middleware . csrf . Csrf View Middleware ', ' django . contrib . auth . middleware . Authentication Middleware ', ' django . contrib . auth . middleware . Session Authentication Middleware ', ' django . contrib . messages . middleware . Message Middleware ', ' django . middleware . clickjacking . X Frame Options Middleware ', ]" />
      <item value="URLCONF" />
      <item value="# SECURITY WARNING : don ' t run with debug turned on in production !" />
      <item value="join" />
      <item value="# Quick - start development settings - unsuitable for production" />
      <item value="STATICFILES" />
      <item value="USE TZ" />
      <item value="Internationalization" />
      <item value=". Numeric Password Validator" />
      <item value="Common Password Validator '," />
      <item value="User Attribute Similarity Validator" />
      <item value="For more information on this file , see" />
      <item value="It exposes the WSGI callable as a module - level variable named `` application ``." />
      <item value="VALIDATORS" />
      <item value="AUTH PASSWORD VALIDATORS = [ { ' NAME ': ' django . contrib . auth . password validation . User Attribute Similarity Validator ', }, { ' NAME ': ' django . contrib . auth . password validation . Minimum Length Validator ', }, { ' NAME ': ' django . contrib . auth . password validation . Common Password Validator ', }, { ' NAME ': ' django . contrib . auth . password validation . Numeric Password Validator" />
      <item value="AUTH PASSWORD VALIDATORS = [ { ' NAME ': ' django . contrib . auth . password validation . User Attribute Similarity Validator ', }, { ' NAME ': ' django . contrib . auth . password validation . Minimum Length Validator ', }, { ' NAME ': ' django . contrib . auth . password validation . Common Password Validator ', }, { ' NAME ': ' django . contrib . auth . password validation . Numeric Password Validator ', }, ]" />
      <item value="authenticated" />
      <item value="BACKENDS" />
      <item value="AUTHENTICATION" />
      <item value="diagram" />
      <item value="digra" />
      <item value="ngo . t" />
    </histories>
  </component>
</application>